Proceeding with single-core trimming (user-defined)
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 2.10
single-core operation.
No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)



AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> SPT5_INPUT_R1_T1_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	5	AGATCGGAAGAGC	100000	0.01
Nextera	0	CTGTCTCTTATA	100000	0.00
smallRNA	0	TGGAATTCTCGG	100000	0.00
Using Illumina adapter for trimming (count: 5). Second best hit was Nextera (count: 0)

Writing report to 'SPT5_INPUT_R1_T1_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: SPT5_INPUT_R1_T1_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 2.10
Number of cores used for trimming: 1
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 2.10). Setting -j 1
Writing final adapter and quality trimmed output to SPT5_INPUT_R1_T1_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file SPT5_INPUT_R1_T1_1.fastq.gz <<< 
This is cutadapt 2.10 with Python 3.7.6
Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC SPT5_INPUT_R1_T1_1.fastq.gz
Processing reads on 1 core in single-end mode ...
Finished in 2.51 s (25 us/read; 2.39 M reads/minute).

=== Summary ===

Total reads processed:                 100,000
Reads with adapters:                    36,474 (36.5%)
Reads written (passing filters):       100,000 (100.0%)

Total basepairs processed:     5,000,000 bp
Quality-trimmed:                   7,616 bp (0.2%)
Total written (filtered):      4,943,720 bp (98.9%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 36474 times

No. of allowed errors:
0-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 35.2%
  C: 24.4%
  G: 16.4%
  T: 24.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	27903	25000.0	0	27903
2	6024	6250.0	0	6024
3	1896	1562.5	0	1896
4	522	390.6	0	522
5	89	97.7	0	89
6	17	24.4	0	17
7	4	6.1	0	4
8	2	1.5	0	2
9	6	0.4	0	2 4
10	4	0.1	1	0 4
18	1	0.0	1	1
21	1	0.0	1	1
25	1	0.0	1	1
38	1	0.0	1	1
50	3	0.0	1	1 2

RUN STATISTICS FOR INPUT FILE: SPT5_INPUT_R1_T1_1.fastq.gz
=============================================
100000 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to 'SPT5_INPUT_R1_T1_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: SPT5_INPUT_R1_T1_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 2.10
Number of cores used for trimming: 1
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 2.10). Setting -j -j 1
Writing final adapter and quality trimmed output to SPT5_INPUT_R1_T1_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file SPT5_INPUT_R1_T1_2.fastq.gz <<< 
This is cutadapt 2.10 with Python 3.7.6
Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC SPT5_INPUT_R1_T1_2.fastq.gz
Processing reads on 1 core in single-end mode ...
Finished in 3.30 s (33 us/read; 1.82 M reads/minute).

=== Summary ===

Total reads processed:                 100,000
Reads with adapters:                    36,252 (36.3%)
Reads written (passing filters):       100,000 (100.0%)

Total basepairs processed:     5,000,000 bp
Quality-trimmed:                  32,110 bp (0.6%)
Total written (filtered):      4,919,489 bp (98.4%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 36252 times

No. of allowed errors:
0-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 35.7%
  C: 24.0%
  G: 16.5%
  T: 23.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	27657	25000.0	0	27657
2	6048	6250.0	0	6048
3	1870	1562.5	0	1870
4	553	390.6	0	553
5	86	97.7	0	86
6	20	24.4	0	20
7	2	6.1	0	2
9	3	0.4	0	0 3
10	5	0.1	1	0 5
11	1	0.0	1	0 1
12	1	0.0	1	0 1
13	1	0.0	1	0 1
17	1	0.0	1	1
21	1	0.0	1	1
25	1	0.0	1	1
36	1	0.0	1	1
50	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: SPT5_INPUT_R1_T1_2.fastq.gz
=============================================
100000 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SPT5_INPUT_R1_T1_1_trimmed.fq.gz and SPT5_INPUT_R1_T1_2_trimmed.fq.gz
file_1: SPT5_INPUT_R1_T1_1_trimmed.fq.gz, file_2: SPT5_INPUT_R1_T1_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: SPT5_INPUT_R1_T1_1_trimmed.fq.gz and SPT5_INPUT_R1_T1_2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to SPT5_INPUT_R1_T1_1_val_1.fq.gz
Writing validated paired-end Read 2 reads to SPT5_INPUT_R1_T1_2_val_2.fq.gz

Total number of sequences analysed: 100000

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 446 (0.45%)


  >>> Now running FastQC on the validated data SPT5_INPUT_R1_T1_1_val_1.fq.gz<<<

Started analysis of SPT5_INPUT_R1_T1_1_val_1.fq.gz
Approx 5% complete for SPT5_INPUT_R1_T1_1_val_1.fq.gz
Approx 10% complete for SPT5_INPUT_R1_T1_1_val_1.fq.gz
Approx 15% complete for SPT5_INPUT_R1_T1_1_val_1.fq.gz
Approx 20% complete for SPT5_INPUT_R1_T1_1_val_1.fq.gz
Approx 25% complete for SPT5_INPUT_R1_T1_1_val_1.fq.gz
Approx 30% complete for SPT5_INPUT_R1_T1_1_val_1.fq.gz
Approx 35% complete for SPT5_INPUT_R1_T1_1_val_1.fq.gz
Approx 40% complete for SPT5_INPUT_R1_T1_1_val_1.fq.gz
Approx 45% complete for SPT5_INPUT_R1_T1_1_val_1.fq.gz
Approx 50% complete for SPT5_INPUT_R1_T1_1_val_1.fq.gz
Approx 55% complete for SPT5_INPUT_R1_T1_1_val_1.fq.gz
Approx 60% complete for SPT5_INPUT_R1_T1_1_val_1.fq.gz
Approx 65% complete for SPT5_INPUT_R1_T1_1_val_1.fq.gz
Approx 70% complete for SPT5_INPUT_R1_T1_1_val_1.fq.gz
Approx 75% complete for SPT5_INPUT_R1_T1_1_val_1.fq.gz
Approx 80% complete for SPT5_INPUT_R1_T1_1_val_1.fq.gz
Approx 85% complete for SPT5_INPUT_R1_T1_1_val_1.fq.gz
Approx 90% complete for SPT5_INPUT_R1_T1_1_val_1.fq.gz
Approx 95% complete for SPT5_INPUT_R1_T1_1_val_1.fq.gz

  >>> Now running FastQC on the validated data SPT5_INPUT_R1_T1_2_val_2.fq.gz<<<

Started analysis of SPT5_INPUT_R1_T1_2_val_2.fq.gz
Approx 5% complete for SPT5_INPUT_R1_T1_2_val_2.fq.gz
Approx 10% complete for SPT5_INPUT_R1_T1_2_val_2.fq.gz
Approx 15% complete for SPT5_INPUT_R1_T1_2_val_2.fq.gz
Approx 20% complete for SPT5_INPUT_R1_T1_2_val_2.fq.gz
Approx 25% complete for SPT5_INPUT_R1_T1_2_val_2.fq.gz
Approx 30% complete for SPT5_INPUT_R1_T1_2_val_2.fq.gz
Approx 35% complete for SPT5_INPUT_R1_T1_2_val_2.fq.gz
Approx 40% complete for SPT5_INPUT_R1_T1_2_val_2.fq.gz
Approx 45% complete for SPT5_INPUT_R1_T1_2_val_2.fq.gz
Approx 50% complete for SPT5_INPUT_R1_T1_2_val_2.fq.gz
Approx 55% complete for SPT5_INPUT_R1_T1_2_val_2.fq.gz
Approx 60% complete for SPT5_INPUT_R1_T1_2_val_2.fq.gz
Approx 65% complete for SPT5_INPUT_R1_T1_2_val_2.fq.gz
Approx 70% complete for SPT5_INPUT_R1_T1_2_val_2.fq.gz
Approx 75% complete for SPT5_INPUT_R1_T1_2_val_2.fq.gz
Approx 80% complete for SPT5_INPUT_R1_T1_2_val_2.fq.gz
Approx 85% complete for SPT5_INPUT_R1_T1_2_val_2.fq.gz
Approx 90% complete for SPT5_INPUT_R1_T1_2_val_2.fq.gz
Approx 95% complete for SPT5_INPUT_R1_T1_2_val_2.fq.gz
Deleting both intermediate output files SPT5_INPUT_R1_T1_1_trimmed.fq.gz and SPT5_INPUT_R1_T1_2_trimmed.fq.gz

====================================================================================================

